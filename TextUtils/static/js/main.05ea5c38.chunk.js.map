{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","id","type","Navbar","props","to","title","href","placeholder","defaultProps","TextForm","useState","text","setText","htmlFor","heading","value","rows","onChange","event","target","onClick","toUpperCase","toLowerCase","split","map","currentValue","slice","join","length","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ea5c38.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-2\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/Project-js/TextUtils\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"../\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/Project-js/TextUtils/about\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    setText(text.toUpperCase());\r\n  };\r\n\r\n  const handleDownClick = () => {\r\n    setText(text.toLowerCase());\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            <h1>{props.heading}</h1>\r\n          </label>\r\n\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n            Convert to Uppercase\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary my-2\" onClick={handleDownClick}>\r\n            Convert to Lowercase\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary my-2\"\r\n            onClick={() => {\r\n              setText(\r\n                text\r\n                  .split(\" \")\r\n                  .map((currentValue) => {\r\n                    let newText =\r\n                      currentValue[0].toUpperCase() + currentValue.slice(1);\r\n                    return newText;\r\n                  })\r\n                  .join(\" \")\r\n              );\r\n            }}\r\n          >\r\n            Convert to Title Case\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setText(\"\");\r\n            }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\"\\n\").join(\" \").split(\" \")[\r\n            text.split(\"\\n\").join(\" \").split(\" \").length - 1\r\n          ] === \"\"\r\n            ? text.split(\"\\n\").join(\" \").split(\" \").length - 1\r\n            : text.split(\"\\n\").join(\" \").split(\" \").length}{\" \"}\r\n          words and {text.length} characters.\r\n        </p>\r\n        <p>\r\n          It will take{\" \"}\r\n          {0.008 *\r\n            (text.split(\" \")[text.split(\" \").length - 1] === \"\"\r\n              ? text.split(\" \").length - 1\r\n              : text.split(\" \").length)}{\" \"}\r\n          minutes to read.\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" />\n        <div className=\"container my-3\">\n          <div>\n            <Switch>\n              <Route exact path=\"/Project-js/TextUtils/about\">\n                <About />\n              </Route>\n              <Route exact path=\"/Project-js/TextUtils/\">\n                <TextForm heading=\"Enter the text to analyze\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}